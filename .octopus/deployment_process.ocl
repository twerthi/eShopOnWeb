step "sql-create-catalog-database-if-not-exists" {
    name = "SQL - Create Catalog Database If Not Exists"

    action {
        properties = {
            createCommandTimeout = "30"
            createDatabaseName = "#{Project.Database.Catalog.Name}"
            createSqlDatabaseRetryAttempts = "0"
            createSqlLoginPasswordWhoHasRights = "#{Database.Server.SA.Password}"
            createSqlLoginUserWhoHasCreateUserRights = "#{Database.Server.SA.Username}"
            createSqlServer = "#{Database.Server.Name}"
            Octopus.Action.Template.Id = "ActionTemplates-21"
            Octopus.Action.Template.Version = "5"
        }
        worker_pool = "database-worker-pool"
    }
}

step "flyway-catalog-database-migrations" {
    name = "Flyway Catalog Database Migrations"

    action {
        properties = {
            Flyway.Authentication.Method = "usernamepassword"
            Flyway.Command.BaseLineOnMigrate = "false"
            Flyway.Command.FailOnDrift = "true"
            Flyway.Command.OutOfOrder = "false"
            Flyway.Command.SkipExecutingMigrations = "false"
            Flyway.Command.Target = "latest"
            Flyway.Command.Value = "migrate"
            Flyway.Database.User = "#{Database.Server.SA.Username}"
            Flyway.Database.User.Password = "#{Database.Server.SA.Password}"
            Flyway.Email.Address = "#{Flyway.EmailAddress}"
            Flyway.Package.Value = "{\"PackageId\":\"eShopOnWeb.Catalog.Db\",\"FeedId\":\"octopus-server-built-in\"}"
            Flyway.PersonalAccessToken = "#{Flyway.PAT}"
            Flyway.Target.Url = "jdbc:sqlserver://#{Database.Server.Name}:#{Database.Server.Port};databaseName=#{Project.Database.Catalog.Name};trustServerCertificate=true;"
            Octopus.Action.Template.Id = "ActionTemplates-2201"
            Octopus.Action.Template.Version = "15"
        }
        worker_pool = "container-worker-pool"

        container {
            feed = "docker-hub"
            image = "octopuslabs/flyway-workertools"
        }

        packages "Flyway.Package.Value" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "eShopOnWeb.Catalog.Db"
            properties = {
                Extract = "True"
                PackageParameterName = "Flyway.Package.Value"
                SelectionMode = "deferred"
            }
        }
    }
}

step "sql-create-identity-database-if-not-exists" {
    name = "SQL - Create Identity Database If Not Exists"

    action {
        properties = {
            createCommandTimeout = "30"
            createDatabaseName = "#{Project.Database.Identity.Name}"
            createSqlDatabaseRetryAttempts = "0"
            createSqlLoginPasswordWhoHasRights = "#{Database.Server.SA.Password}"
            createSqlLoginUserWhoHasCreateUserRights = "#{Database.Server.SA.Username}"
            createSqlServer = "#{Database.Server.Name}"
            Octopus.Action.Template.Id = "ActionTemplates-21"
            Octopus.Action.Template.Version = "5"
        }
        worker_pool = "database-worker-pool"
    }
}

step "flyway-identity-database-migrations" {
    name = "Flyway Identity Database Migrations"

    action {
        properties = {
            Flyway.Authentication.Method = "usernamepassword"
            Flyway.Command.BaseLineOnMigrate = "false"
            Flyway.Command.FailOnDrift = "true"
            Flyway.Command.OutOfOrder = "false"
            Flyway.Command.SkipExecutingMigrations = "false"
            Flyway.Command.Target = "latest"
            Flyway.Command.Value = "migrate"
            Flyway.Database.User = "#{Database.Server.SA.Username}"
            Flyway.Database.User.Password = "#{Database.Server.SA.Password}"
            Flyway.Package.Value = "{\"PackageId\":\"eShopOnWeb.Identity.Db\",\"FeedId\":\"octopus-server-built-in\"}"
            Flyway.Target.Url = "jdbc:sqlserver://#{Database.Server.Name}:#{Database.Server.Port};databaseName=#{Project.Database.Identity.Name};trustServerCertificate=true;"
            Octopus.Action.Template.Id = "ActionTemplates-2201"
            Octopus.Action.Template.Version = "15"
        }
        worker_pool = "container-worker-pool"

        container {
            feed = "docker-hub"
            image = "octopuslabs/flyway-workertools"
        }

        packages "Flyway.Package.Value" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "eShopOnWeb.Identity.Db"
            properties = {
                Extract = "True"
                PackageParameterName = "Flyway.Package.Value"
                SelectionMode = "deferred"
            }
        }
    }
}

step "deploy-eshop-web" {
    name = "Deploy eShop Web"
    properties = {
        Octopus.Action.TargetRoles = "eShop-Web"
    }

    action {
        action_type = "Octopus.IIS"
        properties = {
            Octopus.Action.EnabledFeatures = "Octopus.Features.IISWebSite,Octopus.Features.JsonConfigurationVariables,Octopus.Features.ConfigurationVariables,Octopus.Features.ConfigurationTransforms"
            Octopus.Action.IISWebSite.ApplicationPoolFrameworkVersion = "No Managed Code"
            Octopus.Action.IISWebSite.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.ApplicationPoolName = "#{Project.Web.Catalog.Site.Name}"
            Octopus.Action.IISWebSite.Bindings = "[{\"protocol\":\"http\",\"port\":\"80\",\"host\":\"#{Project.Web.Catalog.Hostname}\",\"thumbprint\":null,\"certificateVariable\":null,\"requireSni\":\"False\",\"enabled\":\"True\"},{\"protocol\":\"https\",\"ipAddress\":\"*\",\"port\":\"443\",\"host\":\"#{Project.Web.Catalog.Hostname}\",\"thumbprint\":null,\"certificateVariable\":\"Project.Web.Certificate\",\"requireSni\":\"False\",\"enabled\":\"True\"}]"
            Octopus.Action.IISWebSite.CreateOrUpdateWebSite = "True"
            Octopus.Action.IISWebSite.DeploymentType = "webSite"
            Octopus.Action.IISWebSite.EnableAnonymousAuthentication = "True"
            Octopus.Action.IISWebSite.EnableBasicAuthentication = "False"
            Octopus.Action.IISWebSite.EnableWindowsAuthentication = "False"
            Octopus.Action.IISWebSite.StartApplicationPool = "True"
            Octopus.Action.IISWebSite.StartWebSite = "True"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.WebRootType = "packageRoot"
            Octopus.Action.IISWebSite.WebSiteName = "#{Project.Web.Catalog.Site.Name}"
            Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles = "True"
            Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings = "True"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appsettings.json"
            Octopus.Action.Package.PackageId = "eShopOnWeb.Web"
            Octopus.Action.RunOnServer = "false"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "eShopOnWeb.Web"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "deploy-eshop-api" {
    name = "Deploy eShop API"
    properties = {
        Octopus.Action.TargetRoles = "eShop-Api"
    }

    action {
        action_type = "Octopus.IIS"
        properties = {
            Octopus.Action.EnabledFeatures = "Octopus.Features.IISWebSite,Octopus.Features.JsonConfigurationVariables,Octopus.Features.ConfigurationVariables,Octopus.Features.ConfigurationTransforms"
            Octopus.Action.IISWebSite.ApplicationPoolFrameworkVersion = "No Managed Code"
            Octopus.Action.IISWebSite.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.ApplicationPoolName = "#{Project.Web.PublicApi.Site.Name}"
            Octopus.Action.IISWebSite.Bindings = "[{\"protocol\":\"http\",\"ipAddress\":\"*\",\"port\":\"80\",\"host\":\"#{Project.Web.PublicApi.Hostname}\",\"thumbprint\":null,\"certificateVariable\":null,\"requireSni\":\"False\",\"enabled\":\"True\"},{\"protocol\":\"https\",\"ipAddress\":\"*\",\"port\":\"443\",\"host\":\"#{Project.Web.PublicApi.Hostname}\",\"thumbprint\":null,\"certificateVariable\":\"Project.Web.Certificate\",\"requireSni\":\"False\",\"enabled\":\"True\"}]"
            Octopus.Action.IISWebSite.CreateOrUpdateWebSite = "True"
            Octopus.Action.IISWebSite.DeploymentType = "webSite"
            Octopus.Action.IISWebSite.EnableAnonymousAuthentication = "True"
            Octopus.Action.IISWebSite.EnableBasicAuthentication = "False"
            Octopus.Action.IISWebSite.EnableWindowsAuthentication = "False"
            Octopus.Action.IISWebSite.StartApplicationPool = "True"
            Octopus.Action.IISWebSite.StartWebSite = "True"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.WebRootType = "packageRoot"
            Octopus.Action.IISWebSite.WebSiteName = "#{Project.Web.PublicApi.Site.Name}"
            Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles = "True"
            Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings = "True"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appsettings.json"
            Octopus.Action.Package.PackageId = "eShopOnWeb.PublicApi"
            Octopus.Action.RunOnServer = "false"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "eShopOnWeb.PublicApi"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "display-link" {
    name = "Display Link"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = "Write-Highlight \"[eShop On Web #{Octopus.Environment.Name}](https://#{Project.Web.Catalog.Hostname})\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "ad-worker-pool"
    }
}